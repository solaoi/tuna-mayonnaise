{"version":3,"sources":["../node_modules/pug-filters/lib sync /^jstransformer/-.*$","../node_modules/pug-filters/lib sync","rete/controls/TextControl.js","rete/components/input/TextComponent.js","rete/controls/JsonControl.js","rete/components/input/JsonComponent.js","rete/nodes/TemplateNode.jsx","rete/controls/HTMLControl.js","rete/components/template/TemplateComponent.js","rete/controls/template/HandlebarsControl.js","rete/components/template/HandlebarsComponent.js","rete/controls/template/PugControl.js","rete/components/template/PugComponent.js","rete/controls/BooleanControl.js","rete/components/input/BooleanComponent.js","rete/nodes/EndpointNode.jsx","rete/controls/EndpointControl.js","rete/components/EndpointComponent.js","rete/components/input/PathComponent.js","rete/controls/ApiControl.js","rete/nodes/ApiNode.jsx","rete/components/ApiComponent.js","rete/components/input/UrlComponent.js","rete.jsx","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","TextControl","Rete","Control","constructor","emitter","key","node","readonly","super","this","component","initial","data","props","value","onChange","v","setValue","trigger","val","putData","update","type","ref","addEventListener","stopPropagation","String","target","TextComponent","Component","socket","path","builder","out1","Output","addControl","editor","addOutput","worker","inputs","outputs","text","JsonControl","rows","JsonComponent","out","json","TemplateNode","Node","render","bindSocket","bindControl","state","controls","selected","className","style","background","map","output","name","io","innerRef","control","input","HTMLControl","controlName","outputValue","contentType","TemplateComponent","dataSocket","templateSocket","htmlSocket","templateEngineInput","Input","jsonInput","addInput","length","connections","template","filter","conn","html","templateEngine","pug","JSON","parse","Handlebars","compile","hbsTemplate","nodes","find","n","get","HandlebarsControl","HandlebarsComponent","hbs","PugControl","PugComponent","BooleanControl","checked","BooleanComponent","boolean","EndpointNode","EndpointControl","enabledFlag","EndpointComponent","booleanSocket","stringSocket","pathSocket","enabledInput","contentInput","pathInput","content","connection","PathComponent","ApiControl","ApiNode","showControl","ApiComponent","urlSocket","jsonSocket","urlInput","UrlComponent","url","container","a","Socket","textSocket","combineWith","handlebarsSocket","pugSocket","components","NodeEditor","use","ConnectionPlugin","ReactRenderPlugin","ContextMenuPlugin","Arrange","forEach","Undo","Redo","Save","axios","post","toJSON","then","toast","success","catch","error","Download","blob","Blob","stringify","saveAs","Debug","console","log","searchBar","delay","allocate","rename","items","KeyboardPlugin","CommentPlugin","margin","MinimapPlugin","ConnectionPathPlugin","DEFAULT","transformer","x1","y1","x2","y2","curve","curveBundle","options","vertical","curvature","arrow","color","marker","ConnectionReroutePlugin","AutoArrangePlugin","x","y","depth","HistoryPlugin","keyboard","window","navigator","userAgent","toLowerCase","indexOf","document","metaKey","shiftKey","engine","Engine","c","register","res","fromJSON","createNode","endpoint","position","addNode","on","abort","process","view","resize","AreaPlugin","zoomAt","App","width","height","createEditor","rootElement","getElementById","ReactDOM"],"mappings":"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","file":"static/js/main.90b9ab50.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 184;","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 185;","import Rete from \"rete\";\n\nclass TextControl extends Rete.Control {\n  static component = ({ value, onChange }) => (\n    <input\n      type=\"text\"\n      value={value}\n      ref={(ref) => {\n        ref && ref.addEventListener(\"pointerdown\", (e) => e.stopPropagation());\n      }}\n      onChange={(e) => onChange(String(e.target.value))}\n    />\n  );\n\n  constructor(emitter, key, node, readonly = false) {\n    super(key);\n    this.emitter = emitter;\n    this.key = key;\n    this.component = TextControl.component;\n\n    const initial = node.data[key] || \"\";\n\n    node.data[key] = initial;\n    node.data[\"output\"] = initial;\n    this.props = {\n      readonly,\n      value: initial,\n      onChange: (v) => {\n        this.setValue(v);\n        this.emitter.trigger(\"process\");\n      },\n    };\n  }\n\n  setValue(val) {\n    this.props.value = val;\n    this.putData(this.key, val);\n    this.putData(\"output\", val);\n    this.update();\n  }\n}\n\nexport default TextControl;\n","import Rete from \"rete\";\nimport TextControl from \"../../controls/TextControl\";\n\nclass TextComponent extends Rete.Component {\n  path = [\"[ Input ]\"];\n  constructor(socket) {\n    super(\"Text\");\n    this.socket = socket;\n  }\n\n  builder(node) {\n    const out1 = new Rete.Output(\"text\", \"Text\", this.socket);\n\n    return node\n      .addControl(new TextControl(this.editor, \"text\", node))\n      .addOutput(out1);\n  }\n\n  worker(node, inputs, outputs) {\n    outputs[\"text\"] = node.data.text;\n  }\n}\n\nexport default TextComponent;\n","import Rete from \"rete\";\n\nclass JsonControl extends Rete.Control {\n  static component = ({ value, onChange }) => (\n    <textarea\n      value={value}\n      rows={10}\n      ref={(ref) => {\n        ref && ref.addEventListener(\"pointerdown\", (e) => e.stopPropagation());\n      }}\n      onChange={(e) => onChange(String(e.target.value))}\n    />\n  );\n\n  constructor(emitter, key, node, readonly = false) {\n    super(key);\n    this.emitter = emitter;\n    this.key = key;\n    this.component = JsonControl.component;\n\n    const initial = node.data[key] || `{\"name\": \"value\"}`;\n\n    node.data[key] = initial;\n    node.data[\"output\"] = initial;\n    this.props = {\n      readonly,\n      value: initial,\n      onChange: (v) => {\n        this.setValue(v);\n        this.emitter.trigger(\"process\");\n      },\n    };\n  }\n\n  setValue(val) {\n    this.props.value = val;\n    this.putData(this.key, val);\n    this.putData(\"output\", val);\n    this.update();\n  }\n}\n\nexport default JsonControl;\n","import Rete from \"rete\";\nimport JsonControl from \"../../controls/JsonControl\";\n\nclass JsonComponent extends Rete.Component {\n  path = [\"[ Input ]\"];\n  constructor(socket) {\n    super(\"JSON\");\n    this.socket = socket;\n  }\n\n  builder(node) {\n    const out = new Rete.Output(\"json\", \"JSON\", this.socket);\n\n    return node\n      .addControl(new JsonControl(this.editor, \"json\", node))\n      .addOutput(out);\n  }\n\n  worker(node, inputs, outputs) {\n    outputs[\"json\"] = node.data.json;\n  }\n}\n\nexport default JsonComponent;\n","import React from \"react\";\nimport { Node, Socket, Control } from \"rete-react-render-plugin\";\n\nexport class TemplateNode extends Node {\n  render() {\n    const { bindSocket, bindControl } = this.props;\n    const { outputs, controls, inputs, selected } = this.state;\n\n    return (\n      <div className={`node ${selected}`} style={{ background: \"grey\" }}>\n        <div className=\"title\">Template</div>\n        {/* Outputs */}\n        {outputs.map(output => (\n          <div className=\"output\" key={output.key}>\n            <div className=\"output-title\">{output.name}</div>\n            <Socket\n              type=\"output\"\n              socket={output.socket}\n              io={output}\n              innerRef={bindSocket}\n            />\n          </div>\n        ))}\n        {/* Controls */}\n        {controls.map(control => (\n          <Control\n            className=\"control\"\n            key={control.key}\n            control={control}\n            innerRef={bindControl}\n          />\n        ))}\n        {/* Inputs */}\n        {inputs.map(input => (\n          <div className=\"input\" key={input.key}>\n            <Socket\n              type=\"input\"\n              socket={input.socket}\n              io={input}\n              innerRef={bindSocket}\n            />\n            <div className=\"input-title\">{input.name}</div>\n          </div>\n        ))}\n      </div>\n    );\n  }\n}\n","import Rete from \"rete\";\n\nclass HTMLControl extends Rete.Control {\n  static component = ({ value, onChange }) => (\n    <textarea\n      value={value}\n      rows={10}\n      ref={(ref) => {\n        ref && ref.addEventListener(\"pointerdown\", (e) => e.stopPropagation());\n      }}\n      onChange={(e) => onChange(String(e.target.value))}\n    />\n  );\n\n  constructor(emitter, controlName, node, readonly = false) {\n    super(controlName);\n\n    this.emitter = emitter;\n    this.keys = [];\n    this.component = HTMLControl.component;\n    this.props = {\n      readonly,\n      value: \"\",\n      onChange: () => {},\n    };\n    node.data[\"output\"] = \"\";\n  }\n\n  setValue(inputs, outputValue, contentType) {\n    this.props.value = outputValue;\n    this.putData(\"output\", outputValue);\n    this.putData(\"contentType\", contentType);\n    for (const key in inputs) {\n      if (inputs[key][0]) {\n        this.putData(key, inputs[key][0]);\n      }\n    }\n    this.update();\n  }\n}\n\nexport default HTMLControl;\n","import Rete from \"rete\";\nimport { TemplateNode } from \"../../nodes/TemplateNode\";\nimport JsonControl from \"../../controls/JsonControl\";\nimport HTMLControl from \"../../controls/HTMLControl\";\nimport * as pug from \"pug\";\nimport Handlebars from \"handlebars\";\n\nclass TemplateComponent extends Rete.Component {\n  path = [\"[ Template ]\"];\n  constructor(dataSocket, templateSocket, htmlSocket) {\n    super(\"Template\");\n    this.data.component = TemplateNode; // optional\n    this.dataSocket = dataSocket;\n    this.templateSocket = templateSocket;\n    this.htmlSocket = htmlSocket;\n  }\n\n  builder(node) {\n    const templateEngineInput = new Rete.Input(\n      \"template\",\n      \"TemplateEngine\",\n      this.templateSocket\n    );\n    const jsonInput = new Rete.Input(\"json\", \"Data (JSON)\", this.dataSocket);\n    const out = new Rete.Output(\"html\", \"HTML\", this.htmlSocket);\n\n    jsonInput.addControl(new JsonControl(this.editor, \"json\", node));\n\n    return node\n      .addInput(templateEngineInput)\n      .addInput(jsonInput)\n      .addControl(new HTMLControl(this.editor, \"template\", node, true))\n      .addOutput(out);\n  }\n\n  worker(node, inputs, outputs) {\n    const json = inputs[\"json\"].length ? inputs[\"json\"][0] : node.data.json;\n    const connections = node.inputs.template.connections.filter(\n      (conn) =>\n        conn?.output === \"hbs\" ||\n        conn?.output === \"pug\"\n    );\n    const html = (() => {\n      if (connections.length === 0) {\n        return \"No TemplateEngine detected...\";\n      }\n      const templateEngine = connections[0].output;\n      const template = inputs[\"template\"]?.length\n        ? inputs[\"template\"][0]\n        : node.data.json;\n      if (templateEngine === \"pug\") {\n        return pug.render(template, JSON.parse(json));\n      }\n      if (templateEngine === \"hbs\") {\n        const hbsTemplate = Handlebars.compile(template);\n        return hbsTemplate(JSON.parse(json));\n      }\n    })();\n\n    this.editor.nodes\n      .find((n) => n.id === node.id)\n      .controls.get(\"template\")\n      .setValue(inputs, html, \"text/html; charset=utf-8\");\n    outputs[\"html\"] = html;\n  }\n}\n\nexport default TemplateComponent;\n","import Rete from \"rete\";\n\nclass HandlebarsControl extends Rete.Control {\n  static component = ({ value, onChange }) => (\n    <textarea\n      value={value}\n      rows={10}\n      ref={(ref) => {\n        ref && ref.addEventListener(\"pointerdown\", (e) => e.stopPropagation());\n      }}\n      onChange={(e) => onChange(String(e.target.value))}\n    />\n  );\n\n  constructor(emitter, key, node, readonly = false) {\n    super(key);\n    this.emitter = emitter;\n    this.key = key;\n    this.component = HandlebarsControl.component;\n\n    const initial = node.data[key] || \"<div>{{name}}</div>\";\n\n    node.data[key] = initial;\n    node.data[\"output\"] = initial;\n    this.props = {\n      readonly,\n      value: initial,\n      onChange: (v) => {\n        this.setValue(v);\n        this.emitter.trigger(\"process\");\n      },\n    };\n  }\n\n  setValue(val) {\n    this.props.value = val;\n    this.putData(this.key, val);\n    this.putData(\"output\", val);\n    this.update();\n  }\n}\n\nexport default HandlebarsControl;\n","import Rete from \"rete\";\nimport HandlebarsControl from \"../../controls/template/HandlebarsControl\";\n\nclass HandlebarsComponent extends Rete.Component {\n  path = [\"[ Template ]\"];\n  constructor(socket) {\n    super(\"Handlebars\");\n    this.socket = socket;\n  }\n\n  builder(node) {\n    const out = new Rete.Output(\"hbs\", \"Handlebars\", this.socket);\n\n    return node\n      .addControl(new HandlebarsControl(this.editor, \"hbs\", node))\n      .addOutput(out);\n  }\n\n  worker(node, inputs, outputs) {\n    outputs[\"hbs\"] = node.data.hbs;\n  }\n}\n\nexport default HandlebarsComponent;\n","import Rete from \"rete\";\n\nclass PugControl extends Rete.Control {\n  static component = ({ value, onChange }) => (\n    <textarea\n      value={value}\n      rows={10}\n      ref={(ref) => {\n        ref && ref.addEventListener(\"pointerdown\", (e) => e.stopPropagation());\n      }}\n      onChange={(e) => onChange(String(e.target.value))}\n    />\n  );\n\n  constructor(emitter, key, node, readonly = false) {\n    super(key);\n    this.emitter = emitter;\n    this.key = key;\n    this.component = PugControl.component;\n\n    const initial =\n      node.data[key] || \"div #{name}\";\n\n    node.data[key] = initial;\n    node.data[\"output\"] = initial;\n    this.props = {\n      readonly,\n      value: initial,\n      onChange: (v) => {\n        this.setValue(v);\n        this.emitter.trigger(\"process\");\n      },\n    };\n  }\n\n  setValue(val) {\n    this.props.value = val;\n    this.putData(this.key, val);\n    this.putData(\"output\", val);\n    this.update();\n  }\n}\n\nexport default PugControl;\n","import Rete from \"rete\";\nimport PugControl from \"../../controls/template/PugControl\";\n\nclass PugComponent extends Rete.Component {\n  path = [\"[ Template ]\"];\n  constructor(socket) {\n    super(\"Pug\");\n    this.socket = socket;\n  }\n\n  builder(node) {\n    const out = new Rete.Output(\"pug\", \"Pug\", this.socket);\n\n    return node\n      .addControl(new PugControl(this.editor, \"pug\", node))\n      .addOutput(out);\n  }\n\n  worker(node, inputs, outputs) {\n    outputs[\"pug\"] = node.data.pug;\n  }\n}\n\nexport default PugComponent;\n","import Rete from \"rete\";\n\nclass BooleanControl extends Rete.Control {\n  static component = ({ checked, onChange }) => (\n    <input\n      type=\"checkbox\"\n      checked={checked}\n      ref={(ref) => {\n        ref && ref.addEventListener(\"pointerdown\", (e) => e.stopPropagation());\n      }}\n      onChange={(e) => onChange(+e.target.checked)}\n    />\n  );\n\n  constructor(emitter, key, node, readonly = false) {\n    super(key);\n    this.emitter = emitter;\n    this.key = key;\n    this.component = BooleanControl.component;\n\n    const initial = node.data[key] || false;\n\n    node.data[key] = initial;\n    node.data[\"output\"] = initial;\n    this.props = {\n      readonly,\n      checked: initial,\n      onChange: (v) => {\n        this.setValue(!!v);\n        this.emitter.trigger(\"process\");\n      },\n    };\n  }\n\n  setValue(val) {\n    this.props.checked = val;\n    this.putData(this.key, val);\n    this.putData(\"output\", val);\n    this.update();\n  }\n}\n\nexport default BooleanControl;\n","import Rete from \"rete\";\nimport BooleanControl from \"../../controls/BooleanControl\";\n\nclass BooleanComponent extends Rete.Component {\n  path = [\"[ Input ]\"];\n  constructor(socket) {\n    super(\"Boolean\");\n    this.socket = socket;\n  }\n\n  builder(node) {\n    const out1 = new Rete.Output(\"boolean\", \"Boolean\", this.socket);\n\n    return node\n      .addControl(new BooleanControl(this.editor, \"boolean\", node))\n      .addOutput(out1);\n  }\n\n  worker(node, inputs, outputs) {\n    outputs[\"boolean\"] = node.data.boolean;\n  }\n}\n\nexport default BooleanComponent;\n","import React from \"react\";\nimport { Node, Socket, Control } from \"rete-react-render-plugin\";\n\nexport class EndpointNode extends Node {\n  render() {\n    const { bindSocket, bindControl } = this.props;\n    const { outputs, controls, inputs, selected } = this.state;\n\n    return (\n      <div className={`node ${selected}`} style={{ background: \"grey\" }}>\n        <div className=\"title\">Endpoint</div>\n        {/* Outputs */}\n        {outputs.map(output => (\n          <div className=\"output\" key={output.key}>\n            <div className=\"output-title\">{output.name}</div>\n            <Socket\n              type=\"output\"\n              socket={output.socket}\n              io={output}\n              innerRef={bindSocket}\n            />\n          </div>\n        ))}\n        {/* Controls */}\n        {controls.map(control => (\n          <Control\n            className=\"control\"\n            key={control.key}\n            control={control}\n            innerRef={bindControl}\n          />\n        ))}\n        {/* Inputs */}\n        {inputs.map(input => (\n          <div className=\"input\" key={input.key}>\n            <Socket\n              type=\"input\"\n              socket={input.socket}\n              io={input}\n              innerRef={bindSocket}\n            />\n            <div className=\"input-title\">{input.name}</div>\n          </div>\n        ))}\n      </div>\n    );\n  }\n}\n","import Rete from \"rete\";\n\nclass EndpointControl extends Rete.Control {\n  static component = ({ value, onChange }) => (\n    <textarea\n      value={value}\n      rows={10}\n      ref={(ref) => {\n        ref && ref.addEventListener(\"pointerdown\", (e) => e.stopPropagation());\n      }}\n      onChange={(e) => onChange(String(e.target.value))}\n    />\n  );\n\n  constructor(emitter, controlName, node, readonly = false) {\n    super(controlName);\n\n    this.emitter = emitter;\n    this.keys = [];\n    this.component = EndpointControl.component;\n    this.props = {\n      readonly,\n      value: \"\",\n      onChange: () => {},\n    };\n    node.data[\"output\"] = \"\";\n  }\n\n  setValue(inputs, outputValue, contentType, enabledFlag) {\n    this.props.value = outputValue;\n    this.putData(\"enabledFlag\", enabledFlag);\n    this.putData(\"output\", outputValue);\n    this.putData(\"contentType\", contentType);\n    for (const key in inputs) {\n      if (inputs[key][0]) {\n        this.putData(key, inputs[key][0]);\n      }\n    }\n    this.update();\n  }\n}\n\nexport default EndpointControl;\n","import Rete from \"rete\";\nimport { EndpointNode } from \"../nodes/EndpointNode\";\nimport EndpointControl from \"../controls/EndpointControl\";\nimport BooleanControl from \"../controls/BooleanControl\";\nimport TextControl from \"../controls/TextControl\";\n\nclass EndpointComponent extends Rete.Component {\n  constructor(booleanSocket, stringSocket, pathSocket) {\n    super(\"Endpoint\");\n    this.data.component = EndpointNode; // optional\n    this.booleanSocket = booleanSocket;\n    this.stringSocket = stringSocket;\n    this.pathSocket = pathSocket;\n  }\n\n  builder(node) {\n    const enabledInput = new Rete.Input(\n      \"enabledFlag\",\n      \"Enabled (Boolean)\",\n      this.booleanSocket\n    );\n    const contentInput = new Rete.Input(\n      \"content\",\n      \"Content (JSON/HTML)\",\n      this.stringSocket\n    );\n    const pathInput = new Rete.Input(\"path\", \"Path\", this.pathSocket);\n\n    enabledInput.addControl(\n      new BooleanControl(this.editor, \"enabledFlag\", node)\n    );\n    contentInput.addControl(new TextControl(this.editor, \"content\", node));\n    pathInput.addControl(new TextControl(this.editor, \"path\", node));\n\n    return node\n      .addInput(enabledInput)\n      .addInput(contentInput)\n      .addInput(pathInput)\n      .addControl(new EndpointControl(this.editor, \"endpoint\", node, true));\n  }\n\n  worker(node, inputs, outputs) {\n    const content = inputs[\"content\"].length ? inputs[\"content\"][0] : \"Rendering...\";\n    const contentType = ((connection)=>{\n      if(connection){\n        if (connection.output === \"html\"){\n          return \"text/html; charset=utf-8\";\n        } else if(connection.output === \"json\"){\n          return \"application/json; charset=utf-8\";\n        }else{\n          return \"text/plain; charset=utf-8\"\n        }\n      }\n    })(node.inputs.content.connections[0]);\n    const enabledFlag = inputs[\"enabledFlag\"].length ? inputs[\"enabledFlag\"][0] : false;\n\n    this.editor.nodes\n      .find((n) => n.id === node.id)\n      .controls.get(\"endpoint\")\n      .setValue(inputs, content, contentType, enabledFlag);\n  }\n}\n\nexport default EndpointComponent;\n","import Rete from \"rete\";\nimport TextControl from \"../../controls/TextControl\";\n\nclass PathComponent extends Rete.Component {\n  path = [\"[ Input ]\"];\n  constructor(socket) {\n    super(\"Path\");\n    this.socket = socket;\n  }\n\n  builder(node) {\n    const out1 = new Rete.Output(\"path\", \"Path\", this.socket);\n\n    return node\n      .addControl(new TextControl(this.editor, \"path\", node))\n      .addOutput(out1);\n  }\n\n  worker(node, inputs, outputs) {\n    outputs[\"path\"] = node.data.path;\n  }\n}\n\nexport default PathComponent;\n","import Rete from \"rete\";\n\nclass ApiControl extends Rete.Control {\n  static component = () => null;\n\n  constructor(emitter, key, node, readonly = false) {\n    super(key);\n    this.emitter = emitter;\n    this.key = key;\n    this.component = ApiControl.component;\n\n    const initial = node.data[key] || `{\"name\": \"value\"}`;\n\n    node.data[key] = initial;\n    node.data[\"output\"] = initial;\n    this.props = {\n      readonly,\n      value: initial,\n      onChange: (v) => {\n        this.setValue(v);\n        this.emitter.trigger(\"process\");\n      },\n    };\n  }\n\n  setValue(val) {\n    this.putData(this.key, val);\n    this.putData(\"output\", null);\n    this.update();\n  }\n}\n\nexport default ApiControl;\n","import React from \"react\";\nimport { Node, Socket, Control } from \"rete-react-render-plugin\";\n\nexport class ApiNode extends Node {\n  render() {\n    const { node, bindSocket, bindControl } = this.props;\n    const { outputs, controls, inputs, selected } = this.state;\n\n    return (\n      <div className={`node ${selected}`} style={{ background: \"grey\" }}>\n        <div className=\"title\">{node.name}</div>\n        {/* Outputs */}\n        {outputs.map((output) => (\n          <div className=\"output\" key={output.key}>\n            <div className=\"output-title\">{output.name}</div>\n            <Socket\n              type=\"output\"\n              socket={output.socket}\n              io={output}\n              innerRef={bindSocket}\n            />\n          </div>\n        ))}\n        {/* Controls */}\n        {controls.map((control) => (\n          <Control\n            className=\"control\"\n            key={control.key}\n            control={control}\n            innerRef={bindControl}\n          />\n        ))}\n        {/* Inputs */}\n        {inputs.map((input) => (\n          <div className=\"input\" key={input.key}>\n            <Socket\n              type=\"input\"\n              socket={input.socket}\n              io={input}\n              innerRef={bindSocket}\n            />\n            {!input.showControl() && (\n              <div className=\"input-title\">{input.name}</div>\n            )}\n            {input.showControl() && (\n              <Control\n                className=\"input-control\"\n                control={input.control}\n                innerRef={bindControl}\n              />\n            )}\n          </div>\n        ))}\n      </div>\n    );\n  }\n}\n","import Rete from \"rete\";\nimport ApiControl from \"../controls/ApiControl\";\nimport { ApiNode } from \"../nodes/ApiNode\";\n\nclass ApiComponent extends Rete.Component {\n  path = [\"[ Seed ]\"];\n  constructor(urlSocket, jsonSocket) {\n    super(\"API\");\n    this.data.component = ApiNode; // optional\n    this.urlSocket = urlSocket;\n    this.jsonSocket = jsonSocket;\n  }\n\n  builder(node) {\n    const urlInput = new Rete.Input(\"url\", \"URL\", this.urlSocket);\n    const jsonInput = new Rete.Input(\"json\", \"Dummy Output (JSON)\", this.jsonSocket);\n    const out = new Rete.Output(\"json\", \"JSON\", this.jsonSocket);\n\n    return node\n      .addInput(urlInput)\n      .addInput(jsonInput)\n      .addControl(new ApiControl(this.editor, \"json\", node, true))\n      .addOutput(out);\n  }\n\n  worker(node, inputs, outputs) {\n    const json = inputs[\"json\"].length ? inputs[\"json\"][0] : node.data.json;\n\n    this.editor.nodes\n      .find((n) => n.id === node.id)\n      .controls.get(\"json\")\n      .setValue(json);\n    outputs[\"json\"] = json;\n  }\n}\n\nexport default ApiComponent;\n","import Rete from \"rete\";\nimport TextControl from \"../../controls/TextControl\";\n\nclass UrlComponent extends Rete.Component {\n  path = [\"[ Input ]\"];\n  constructor(socket) {\n    super(\"URL\");\n    this.socket = socket;\n  }\n\n  builder(node) {\n    const out1 = new Rete.Output(\"url\", \"URL\", this.socket);\n\n    return node\n      .addControl(new TextControl(this.editor, \"url\", node))\n      .addOutput(out1);\n  }\n\n  worker(node, inputs, outputs) {\n    outputs[\"url\"] = node.data.url;\n  }\n}\n\nexport default UrlComponent;\n","// eslint-disable-next-line no-unused-vars\nimport React from \"react\";\nimport Rete from \"rete\";\nimport ReactRenderPlugin from \"rete-react-render-plugin\";\nimport ConnectionPlugin from \"rete-connection-plugin\";\nimport AreaPlugin from \"rete-area-plugin\";\nimport ContextMenuPlugin from \"rete-context-menu-plugin\";\nimport KeyboardPlugin from \"rete-keyboard-plugin\";\nimport CommentPlugin from \"rete-comment-plugin\";\nimport MinimapPlugin from \"rete-minimap-plugin\";\nimport ConnectionPathPlugin from \"rete-connection-path-plugin\";\nimport ConnectionReroutePlugin from \"rete-connection-reroute-plugin\";\nimport AutoArrangePlugin from \"rete-auto-arrange-plugin\";\nimport HistoryPlugin from \"rete-history-plugin\";\nimport { toast } from \"react-toastify\";\n\n// import AddComponent from \"./rete/components/operator/AddComponent\";\n// import SubtractComponent from \"./rete/components/operator/SubtractComponent\";\n// import NumComponent from \"./rete/components/NumComponent\";\nimport TextComponent from \"./rete/components/input/TextComponent\";\nimport JsonComponent from \"./rete/components/input/JsonComponent\";\nimport TemplateComponent from \"./rete/components/template/TemplateComponent\";\nimport HandlebarsComponent from \"./rete/components/template/HandlebarsComponent\";\nimport PugComponent from \"./rete/components/template/PugComponent\";\n// import IfComponent from \"./rete/components/statement/IfComponent\";\nimport BooleanComponent from \"./rete/components/input/BooleanComponent\";\nimport EndpointComponent from \"./rete/components/EndpointComponent\";\nimport PathComponent from \"./rete/components/input/PathComponent\";\nimport ApiComponent from \"./rete/components/ApiComponent\";\nimport UrlComponent from \"./rete/components/input/UrlComponent\";\nimport axios from \"axios\";\nimport { saveAs } from \"file-saver\";\n\nexport async function createEditor(container) {\n  // 各種Socket定義\n  // primitive\n  const stringSocket = new Rete.Socket(\"String value\");\n  const booleanSocket = new Rete.Socket(\"Boolean value\");\n\n  // const numSocket = new Rete.Socket(\"Number value\");\n  const textSocket = new Rete.Socket(\"Text value\");\n  textSocket.combineWith(stringSocket);\n  // json\n  const jsonSocket = new Rete.Socket(\"Json value\");\n  jsonSocket.combineWith(stringSocket);\n  // template\n  const templateSocket = new Rete.Socket(\"Template value\");\n  templateSocket.combineWith(stringSocket);\n  const handlebarsSocket = new Rete.Socket(\"Handlebars value\");\n  handlebarsSocket.combineWith(templateSocket);\n  const pugSocket = new Rete.Socket(\"Pug value\");\n  pugSocket.combineWith(templateSocket);\n  // html\n  const htmlSocket = new Rete.Socket(\"HTML value\");\n  htmlSocket.combineWith(stringSocket);\n  const pathSocket = new Rete.Socket(\"Path value\");\n  // api\n  const urlSocket = new Rete.Socket(\"URL value\");\n\n  // 利用可能なコンポーネント一覧\n  const components = [\n    new EndpointComponent(booleanSocket, stringSocket, pathSocket),\n    // new NumComponent(numSocket),\n    // new AddComponent(numSocket),\n    // new SubtractComponent(numSocket),\n    new TextComponent(textSocket),\n    new JsonComponent(jsonSocket),\n    new TemplateComponent(jsonSocket, templateSocket, htmlSocket),\n    new HandlebarsComponent(handlebarsSocket),\n    new PugComponent(pugSocket),\n    // new IfComponent(booleanSocket, stringSocket),\n    new BooleanComponent(booleanSocket),\n    new PathComponent(pathSocket),\n    new ApiComponent(urlSocket, jsonSocket),\n    new UrlComponent(urlSocket),\n  ];\n\n  const editor = new Rete.NodeEditor(\"tuna-mayonnaise@0.0.1\", container);\n  editor.use(ConnectionPlugin);\n  editor.use(ReactRenderPlugin);\n  // Nodeのサブメニュー（削除・複製機能）を追加\n  // 及びNode外を右クリックでコンテキストメニューを表示\n  editor.use(ContextMenuPlugin, {\n    searchBar: false,\n    delay: 100,\n    allocate(component) {\n      return component.path;\n    },\n    rename(component) {\n      return component.name;\n    },\n    items: {\n      Arrange() {\n        editor.nodes.forEach((node) => {\n          editor.trigger(\"arrange\", node);\n        });\n      },\n      Undo() {\n        editor.trigger(\"undo\");\n      },\n      Redo() {\n        editor.trigger(\"redo\");\n      },\n      Save() {\n        axios\n          .post(\"/regist\", editor.toJSON())\n          .then(() => toast.success(\"This configuration is SAVED :)\"))\n          .catch(() => toast.error(\"Maybe tuna tool command is TERMINATED :(\"));\n      },\n      Download() {\n        const blob = new Blob([JSON.stringify(editor.toJSON())], {\n          type: \"application/json;charset=utf-8\",\n        });\n        saveAs(blob, \"tuna-mayonnaise.json\");\n      },\n      Debug() {\n        console.log(JSON.stringify(editor.toJSON()));\n      },\n    },\n  });\n  // DeleteキーでNodeを削除・Spaceキーでコンテキストメニューを表示\n  editor.use(KeyboardPlugin);\n  // Shift + c および Shift + f でコメント追加\n  editor.use(CommentPlugin, {\n    margin: 20, // default indent for new frames is 30px\n  });\n  // 右下にミニマップを表示\n  editor.use(MinimapPlugin);\n  // コネクションパスの見た目を変更（矢印有表記へ）\n  editor.use(ConnectionPathPlugin, {\n    type: ConnectionPathPlugin.DEFAULT, // DEFAULT or LINEAR transformer\n    transformer: () => ([x1, y1, x2, y2]) => [\n      [x1, y1],\n      [x2, y2],\n    ], // optional, custom transformer\n    curve: ConnectionPathPlugin.curveBundle, // curve id\n    options: { vertical: false, curvature: 0.4 }, // optional\n    arrow: { color: \"steelblue\", marker: \"M-5,-10 L-5,10 L20,0 z\" },\n  });\n  // コネクションパスの見た目を変更（直線ではなく曲線で各Node間を結ぶ）\n  editor.use(ConnectionReroutePlugin);\n  editor.use(AutoArrangePlugin, { margin: { x: 200, y: 50 }, depth: 0 });\n  // Crtl + z, Ctrl + yで戻る、進む\n  editor.use(HistoryPlugin, { keyboard: true });\n  // デフォルトではMac標準（Command + z, Command + Shift + z）に対応していないので別途実装\n  const ua = window.navigator.userAgent.toLowerCase();\n  if (ua.indexOf(\"mac os x\") !== -1) {\n    document.addEventListener(\"keydown\", (e) => {\n      if (!e.metaKey) return;\n      switch (e.code) {\n        case \"KeyY\":\n          editor.trigger(\"redo\");\n          break;\n        case \"KeyZ\":\n          if (e.shiftKey) {\n            editor.trigger(\"redo\");\n          } else {\n            editor.trigger(\"undo\");\n          }\n          break;\n        default:\n          break;\n      }\n    });\n  }\n\n  const engine = new Rete.Engine(\"tuna-mayonnaise@0.0.1\");\n\n  components.forEach((c) => {\n    editor.register(c);\n    engine.register(c);\n  });\n\n  const data = await axios\n    .get(\"/tuna-configuration\")\n    .then((res) => res.data)\n    .catch(() => null);\n\n  if (data !== null) {\n    await editor.fromJSON(data);\n    toast.success(\"Previous configuration is RESTORED :)\")\n  } else {\n    const endpoint = await components[0].createNode();\n    endpoint.position = [1000, 200];\n    editor.addNode(endpoint);\n  }\n\n  editor.on(\n    \"process nodecreated noderemoved connectioncreated connectionremoved\",\n    async () => {\n      console.log(\"process\");\n      await engine.abort();\n      await engine.process(editor.toJSON());\n    }\n  );\n\n  editor.view.resize();\n  editor.trigger(\"process\");\n  AreaPlugin.zoomAt(editor, editor.nodes);\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createEditor } from \"./rete\";\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport \"./styles.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ToastContainer />\n      <div\n        style={{ width: \"100vh\", height: \"100vh\" }}\n        ref={(ref) => ref && createEditor(ref)}\n      ></div>\n    </div>\n  );\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}